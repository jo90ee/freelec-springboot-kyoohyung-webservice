buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.kyoohyung.book'
version '1.0.4-SNAPSHOT-' + new Date().format("yyyyMMddHHmmss")

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok') // lombok을 사용하기위해 추가 되어야 하는 것임

    compile('org.springframework.boot:spring-boot-starter-data-jpa') // 스프링 부트용 Spring Data Jpa추상화 라이브러리, 스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리해줌.
    compile('com.h2database:h2')// 인메모리 관계형 데이터베이스. 메모리에서 실행되기때문에 애플리케이션 재시작할 때마다 초기화된다. 주로 테스트용

//    compile('org.springframework.boot:spring-boot-starter-mustache')

//
//    compile('org.springframework.boot:spring-boot-starter-oauth2-client') // 이걸 주석을 풀면 localhost에 붙을때 인증 확인을 하기 때문에 별도의 처리가 없다면 http 401에러를 발생 시킨다.
//    compile('org.springframework.session:spring-session-jdbc')
//
//    compile("org.mariadb.jdbc:mariadb-java-client")
//
//
//    testCompile("org.springframework.security:spring-security-test")

//    testAnnotationProcessor('org.projectlombok:lombok')
}

